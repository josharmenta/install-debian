- name: Install Postgres 13
  become: true
  hosts: all
  vars:
    db_name: ctsms
    db_password: ctsms
    dbtool_sql_path: /ctsms/build/ctsms/core/db/dbtool.sql
    schema_create_sql_path: /ctsms/build/ctsms/core/db/schema-create.sql
    index_create_sql_path: /ctsms/build/ctsms/core/db/index-create.sql
    schema_set_version_sql_path: /ctsms/build/ctsms/core/db/schema-set-version.sql
  tasks:
    - name: install postgresql
      ansible.builtin.apt:
        name: postgresql
        state: present
      notify: Restart PostgreSQL

    - name: install postgresql-plperl
      ansible.builtin.apt:
        name: postgresql-plperl
        state: present
      notify: Restart PostgreSQL

    - name: install python3-psycopg2 # Required for Ansible postgres operations
      ansible.builtin.apt:
        name: python3-psycopg2
        state: present
      notify: Restart PostgreSQL

    - name: install postgresql
      ansible.builtin.apt:
        name: postgresql
        state: present
      notify: Restart PostgreSQL

---
- name: Set up PostgreSQL database for CTSMS
  hosts: dbserver  # Change to your target host group
  become: true
  vars:
    db_user: ctsms
    db_password: ctsms
    db_name: ctsms
    sql_dir: /ctsms/build/ctsms/core/db

  tasks:
    - name: Ensure PostgreSQL user exists
      become_user: postgres
      community.postgresql.postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        role_attr_flags: LOGIN

    - name: Create the CTSMS database
      become_user: postgres
      community.postgresql.postgresql_db:
        name: "{{ db_name }}"
        owner: "{{ db_user }}"

    - name: Grant all privileges on the database
      become_user: postgres
      community.postgresql.postgresql_privs:
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        type: database
        privs: ALL

    - name: Import dbtool.sql as postgres
      become_user: postgres
      ansible.builtin.shell: psql {{ db_name }} < {{ sql_dir }}/dbtool.sql
      args:
        executable: /bin/bash

    - name: Import schema-create.sql as ctsms
      become_user: "{{ db_user }}"
      ansible.builtin.shell: psql -U {{ db_user }} {{ db_name }} < {{ sql_dir }}/schema-create.sql
      args:
        executable: /bin/bash

    - name: Import index-create.sql as ctsms
      become_user: "{{ db_user }}"
      ansible.builtin.shell: psql -U {{ db_user }} {{ db_name }} < {{ sql_dir }}/index-create.sql
      args:
        executable: /bin/bash

    - name: Import schema-set-version.sql as ctsms
      become_user: "{{ db_user }}"
      ansible.builtin.shell: psql -U {{ db_user }} {{ db_name }} < {{ sql_dir }}/schema-set-version.sql
      args:
        executable: /bin/bash

###
### Any custom scripts needing to add to the database should be invoked here.
###

    - name: Set join_collapse_limit to 1 in postgresql.conf
      ansible.builtin.replace:
        path: /etc/postgresql/13/main/postgresql.conf
        regexp: '^#?join_collapse_limit\s*=.*'
        replace: 'join_collapse_limit = 1'
      notify: Restart PostgreSQL

  handlers:
    - name: Restart PostgreSQL
      ansible.builtin.service:
        name: postgresql
        state: restarted
